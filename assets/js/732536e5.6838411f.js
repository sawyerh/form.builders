"use strict";(self.webpackChunkform_builders=self.webpackChunkform_builders||[]).push([[985],{5090:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return h}});var i=n(7462),a=n(3366),s=n(7294),r=n(3905),o=n(7273),l=function(e){if(o.Z.mermaidAPI.initialize({startOnLoad:!1,securityLevel:"loose"}),!e.children)return"Error rendering chart";var t=(0,s.useState)(),n=t[0],i=t[1];return(0,s.useEffect)((function(){var t="sequenceDiagram\n        autonumber\n        "+e.children+"\n    ";o.Z.mermaidAPI.render("graphDiv",t,(function(e){return i(e)}))}),[]),n?s.createElement("div",{dangerouslySetInnerHTML:{__html:n}}):s.createElement("div",null,"Loading chart...")},m=n(7783),c=["components"],d={title:"System integration"},p=void 0,u={unversionedId:"integrating",id:"integrating",title:"System integration",description:"How you design and build your form is greatly influenced by the systems it needs to integrate with. If you don't have freedom to change those systems, then they often dictate aspects like business and validation rules, and can constrain the functionality and flow of your form experience. That's why it's important to understand the downstream system constraints early in your process, otherwise you may lose valuable time designing and building towards an experience that isn't feasible.",source:"@site/docs/integrating.mdx",sourceDirName:".",slug:"/integrating",permalink:"/docs/integrating",editUrl:"https://github.com/sawyerh/form.builders/edit/main/site/docs/integrating.mdx",tags:[],version:"current",frontMatter:{title:"System integration"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Scratchpad",permalink:"/docs/scratchpad"}},h=[{value:"API",id:"api",children:[],level:2},{value:"Machine-readable file import",id:"machine-readable-file-import",children:[],level:2},{value:"Email",id:"email",children:[],level:2},{value:"Paper",id:"paper",children:[],level:2}],f={toc:h};function y(e){var t=e.components,n=(0,a.Z)(e,c);return(0,r.kt)("wrapper",(0,i.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"How you design and build your form is greatly influenced by the systems it needs to integrate with. If you don't have freedom to change those systems, then they often dictate aspects like business and validation rules, and can constrain the functionality and flow of your form experience. That's why it's important to understand the downstream system constraints early in your process, otherwise you may lose valuable time designing and building towards an experience that isn't feasible."),(0,r.kt)("p",null,"You may need to find creative ways to work within the existing ecosystem, by building an understanding of the system capabilities and the businesses processes."),(0,r.kt)("p",null,"Below are integration patterns that you might come across."),(0,r.kt)(m.Z,{toc:h,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"This is the ideal scenario \u2014 the form saves its response directly to the destination system using an API (application programming interface), ideally a RESTful API."),(0,r.kt)("h2",{id:"machine-readable-file-import"},"Machine-readable file import"),(0,r.kt)("p",null,"This approach relies on saving the form submission as a machine-readable file, which is then retrieved and imported by the destination system."),(0,r.kt)("p",null,"Watch out for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Delayed visibility"),': There will be a delay between the form being submitted and when the data becomes available in the destination system. This impacts the service journey, like contact center processes, and how you communicate to the user after submission. There could also be legal considerations, like making sure the "submitted" timestamp remains accurate.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Failed imports"),": You will need a process for handling a scenario where the destination system fails to import a form response. This could be manual intervention, or communicating to the user that their submission failed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data synchronization"),": If the destination system doesn't communicate back to the form system, the user experience is limited to writing data, without other likely desired functionality like making edits or seeing the status of a submission.")),(0,r.kt)("p",null,"Common file formats:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JSON"),(0,r.kt)("li",{parentName:"ul"},"CSV"),(0,r.kt)("li",{parentName:"ul"},"XML")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example sequence:")),(0,r.kt)(l,{mdxType:"Mermaid"},"\n  participant User\n  participant Form as Form app\n  participant S3 as Cloud storage\n  participant D as Destination system\n  participant Staff\n  User->>Form: Submit\n  Form->>S3: Upload CSV file\n  Form->>User: Indicate success\n  D->S3: Import CSV\n  Staff->D: Take action on submission\n"),(0,r.kt)("p",null,"Related:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/usdigitalresponse/project-papua"},"U.S. Digital Response's Pandemic Unemployment Assistance (PUA) claim service")," followed this approach")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://medium.com/u-s-digital-response/technical-notes-from-the-field-pandemic-unemployment-assistance-db5421134969"},"Technical Notes From the Field: Pandemic Unemployment Assistance")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Though the nightly outage is annoying, it does have a silver lining \u2014 by separating these processes, it allows states to choose from many types of software that can interface with the mainframe, including, but not limited to, open source. There are few modern applications that can interface with mainframes, due to the on-premise deployments and a host of other factors. ",(0,r.kt)("strong",{parentName:"p"},"Tons of applications can create data files and share them on a file system \u2014 giving governments more options and reducing vendor lock in.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"http://www.itsc.org/itsc%20public%20library/NationalViewUI_IT%20Systems.pdf"},"2010 Survey of Unemployment Insurance IT Systems (PDF)")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"In some cases, two or more systems applications will independently store the same consumer information, creating the need for synchronization between the applications and ultimately more opportunity for data integrity problems. For example, a state that deploys a call center to handle the filing of UI claims faces the challenge of synchronizing the data in this front-end system with data in the master database; any benefits system changes need to be reflected and implemented in these two\u2014or even more\u2014places.")))),(0,r.kt)("h2",{id:"email"},"Email"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Security"),(0,r.kt)("li",{parentName:"ul"},"Shared inboxes"),(0,r.kt)("li",{parentName:"ul"},"Attachment limits")),(0,r.kt)(l,{mdxType:"Mermaid"},"\n  participant User\n  participant Form as Form app\n  participant Email inbox\n  participant Staff\n  participant D as Destination system\n  User->>Form: Submit\n  Form->>Email inbox: Send email\n  Form->>User: Indicate success\n  Staff->>Email inbox: Check email\n  Staff->>D: Manual entry\n  Staff->>D: Take action on submission\n"),(0,r.kt)("h2",{id:"paper"},"Paper"),(0,r.kt)("p",null,"Watch out for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Strict or difficult file constraints (multi-page TIFF, below 5mb)")))}y.isMDXComponent=!0}}]);